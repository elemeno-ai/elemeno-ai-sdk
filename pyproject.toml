[tool.poetry]
name = "elemeno-ai-sdk"
version = "0.6.15"
description = "A set of glue code and utilities to make using elemeno AI platform a smooth experience"
authors = ["Semantix Dev team <dev@semantix.ai>"]
license = "Apache-2.0"
packages = []
classifiers = [
    # complete classifier list: http://pypi.python.org/pypi?%3Aaction=list_classifiers
    'Development Status :: 5 - Production/Stable',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: Apache Software License',
    'Operating System :: Unix',
    'Operating System :: POSIX',
    'Operating System :: Microsoft :: Windows',
    'Programming Language :: Python',
    'Programming Language :: Python :: 2.7',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.6',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: Implementation :: CPython',
    'Programming Language :: Python :: Implementation :: PyPy',
    # uncomment if you test on these interpreters:
    # 'Programming Language :: Python :: Implementation :: IronPython',
    # 'Programming Language :: Python :: Implementation :: Jython',
    # 'Programming Language :: Python :: Implementation :: Stackless',
    'Topic :: Utilities'
]

[tool.poetry.dependencies]
python = "^3.8.1"
tf2onnx = "^1.14.0"
onnxruntime = "^1.15.1"
aiohttp = "^3.8.5"
tqdm = "^4.66.1"
tenacity = "^8.2.3"
pyjwt = {extras = ["crypto"], version = "^2.8.0"}
marshmallow = "^3.20.1"
skl2onnx = "^1.15.0"


[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
pytest-aiohttp = "^1.0.4"
black = "^23.7.0"
isort = "^5.12.0"
flake8 = "^6.1.0"
mock = "^5.1.0"
bumpversion = "^0.6.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ["py38"]
exclude = '''
/(
    \.git
  | \.venv
  | \.direnv
  | _build
  | build
  | dist
  | \.env
  | \.vscode
  | \.cache
  | github
  | __pycache__
  | .cloudignore
)/
'''

[tool.isort]
profile = "black"
py_version = "38"
line_length = 100
lines_after_imports = 2
lines_between_sections = 1
multi_line_output = 3
force_grid_wrap = 0
include_trailing_comma = "true"
combine_as_imports = "true"
use_parentheses = "true"
ensure_newline_before_comments = true
skip = [
    "./docs", 
    ".direnv", 
    ".tox", 
    ".eggs", 
    "ci/templates", 
    "build", 
    "dist", 
    "__pycache__"
]
skip_glob = ["*/__init__.py"]
skip_gitignore = "true"
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
default_section = "THIRDPARTY"

[tool.pytest.ini_options]
minversion = "6.1"
log_cli = true
log_cli_level = "DEBUG"
log_cli_format = "%(levelname)s:%(filename)s:%(lineno)s - %(funcName)s: %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
addopts = "-ra --strict-markers --doctest-modules --doctest-glob=*.rst --tb=short"
testpaths = [
    "tests",
]